<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[laravel Eloquent ORM 模型关联 使用总结]]></title>
    <url>%2F2018%2F07%2F16%2Flaravel-Eloquent-ORM-%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94-%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[在lavaral中可以直接使用DB查询构建器写sql关联语句，其实挺方便，程序执行效率也会更高。ORM主要应该使用于关联查询比较多的情景。 简介laravel当中主要有以下几种关联关系： 一对一 一对多 多对多 远程一对多 多态关联 多对多的多态关联 主要是前3种关联用的多。返回的数据是集合类型。 定义关联关系简单定义使用在模型中定义一个函数，比如：1234567891011121314class Users extends Base&#123; protected $table = 'blog_admin'; protected $dateFormat = 'U'; /** * 关联模型 * 属于该用户的身份。 */ public function roles() &#123; return $this-&gt;belongsToMany('App\Models\Admin\Role','blog_admin_role','admin_id','role_id'); &#125;&#125; 使用:按正常查询数据，然后在后面跟上roles属性就行了。需要注意的是，必须是单条记录才能直接使用roles属性。 1$data-&gt;roles; 多条记录需要遍历： 123foreach($data as $v)&#123; $v-&gt;roles;&#125; 关联关系 每种关联关系都有正向关联和反向关联 一对一正向： $this-&gt;hasOne(&#39;要关联的模型名&#39;,&#39;foreign_key&#39;,&#39;local_key&#39;); 反向： $this-&gt;belongsTo(&#39;要关联的模型名&#39;,&#39;local_key&#39;,&#39;foreign_key&#39;); foreign_key:关联模型名对应的外键 local_key:本模型被关联的ID 一对多正向： $this-&gt;hasMany(&#39;要关联的模型名&#39;,&#39;foreign_key&#39;,&#39;local_key&#39;); 反向： $this-&gt;belongsTo(&#39;要关联的模型名&#39;,&#39;local_key&#39;,&#39;foreign_key&#39;); foreign_key:关联模型名对应的外键 local_key:本模型被关联的ID 比如：一个分类对应多篇文章，一个文章只属于一个分类，我在文章模型中定义 正向关联： 12345678/** * 关联模型 * 属于该文章的分类。 */public function cat()&#123; return $this-&gt;hasMany('App\Models\Admin\Cat','id','cat_id');&#125; 反向关联： 12345678/** * 关联模型 * 属于该文章的分类。 */public function cat()&#123; return $this-&gt;belongsTo('App\Models\Admin\Cat','cat_id','id');&#125; 总结来说,第一个参数就是外键，无论正向反向关联，这里填写数据表中的外键即可 多对多比如一个管理员和角色多对多，中间表明为blog_admin_role,可以这样定义：12345678/** * 关联模型 * 属于该用户的身份。 */ public function roles() &#123; return $this-&gt;belongsToMany('App\Models\Admin\Role','blog_admin_role','admin_id','role_id'); &#125; 插入 &amp; 更新关联模型插入关联模型首先需要获取到模型，比如，添加一片文章，然后添加标签 添加文章 1$this_article = $this-&gt;create($data); 添加标签 1$this_article-&gt;tag()-&gt;attach($tags_id); 移除关联模型获取文章 1$this_article = $this-&gt;find($id); 移除标签 1$this_article-&gt;tag()-&gt;detach($tags_id); 更新关联模型1$this_article-&gt;tag()-&gt;sync($tags_id); sync方法会接受一组数据，他会保存新添加的数据，移除删除掉的数据。 以上便是简单使用orm后，自己的一些理解。 —-更新（2017/12/24） 多对多添加更新中间表当多对多中间表需要添加额外字段，可以这样做 12$this_article-&gt;tag()-&gt;attach($tags_id,['key'=&gt;$value]); 或者将$tags_id改造成以下格式（假如额外字段位tag_val） 123[ &apos;1&apos;=&gt;[&apos;tag_val&apos;=&gt;&apos;tag_1&apos;], &apos;2&apos;=&gt;[&apos;tag_val&apos;=&gt;&apos;tag_2&apos;]] 参考： http://laravelacademy.org/post/6996.html – END]]></content>
      <categories>
        <category>laravel</category>
      </categories>
      <tags>
        <tag>laravel</tag>
        <tag>orm</tag>
        <tag>关联模型</tag>
      </tags>
  </entry>
</search>
